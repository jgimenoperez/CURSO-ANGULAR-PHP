FROM php:7.4-fpm
# Arguments defined in docker-compose.yml
ARG user
ARG uid

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u $uid -d /home/$user $user
RUN mkdir -p /home/$user/.composer && \
    chown -R $user:$user /home/$user

# Set working directory
WORKDIR /var/www


USER $user


#COPY . /www
#WORKDIR /www
# RUN apt-get update &&  apt-get -y install sudo
# RUN useradd -m docker && echo "docker:docker" | chpasswd && adduser docker sudo
# USER root
# RUN apt install php-cli unzip -y
# RUN apt install curl -y
# RUN cd ~ && curl -sS https://getcomposer.org/installer -o /home/docker/composer-setup.php
# RUN HASH=`curl -sS https://composer.github.io/installer.sig`
# RUN php -r "if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
# RUN php /home/docker/composer-setup.php --install-dir=/usr/local/bin --filename=composer
# RUN apt-get install nginx -y
# RUN service nginx start
# CMD /bin/bash

